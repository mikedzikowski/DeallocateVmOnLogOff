{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.7.4.23292",
      "templateHash": "11856199766627011517"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the resources deployed in this solution."
      }
    },
    "exisitingAutomationAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Set the following values if there are exisiting resource groups, automation accounts, or storage account that should be targeted. If values are not set a default naming convention will be used by resources created."
      }
    },
    "automationAccountRg": {
      "type": "string",
      "defaultValue": "testaa"
    },
    "newAutomationAccount": {
      "type": "bool",
      "defaultValue": true
    },
    "automationAccountSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]"
    },
    "deploymentNameSuffix": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "deployment name suffix."
      }
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "deallocateOnPoweroff-ag"
    }
  },
  "variables": {
    "automationAccountConnectionName": "azureautomation",
    "runbooksPwsh7": [
      {
        "name": "Start-VmDeallocateOnLogOff",
        "uri": "https://raw.githubusercontent.com/mikedzikowski/DeallocateVmOnLogOff/main/runbooks/Start-VmDeallocateOnLogOff.ps1"
      }
    ],
    "LocationShortNames": {
      "australiacentral": "ac",
      "australiacentral2": "ac2",
      "australiaeast": "ae",
      "australiasoutheast": "as",
      "brazilsouth": "bs2",
      "brazilsoutheast": "bs",
      "canadacentral": "cc",
      "canadaeast": "ce",
      "centralindia": "ci",
      "centralus": "cu",
      "eastasia": "ea",
      "eastus": "eu",
      "eastus2": "eu2",
      "francecentral": "fc",
      "francesouth": "fs",
      "germanynorth": "gn",
      "germanywestcentral": "gwc",
      "japaneast": "je",
      "japanwest": "jw",
      "jioindiacentral": "jic",
      "jioindiawest": "jiw",
      "koreacentral": "kc",
      "koreasouth": "ks",
      "northcentralus": "ncu",
      "northeurope": "ne",
      "norwayeast": "ne2",
      "norwaywest": "nw",
      "southafricanorth": "san",
      "southafricawest": "saw",
      "southcentralus": "scu",
      "southeastasia": "sa",
      "southindia": "si",
      "swedencentral": "sc",
      "switzerlandnorth": "sn",
      "switzerlandwest": "sw",
      "uaecentral": "uc",
      "uaenorth": "un",
      "uksouth": "us",
      "ukwest": "uw",
      "usdodcentral": "uc",
      "usdodeast": "ue",
      "usgovarizona": "az",
      "usgoviowa": "ia",
      "usgovtexas": "tx",
      "usgovvirginia": "va",
      "westcentralus": "wcu",
      "westeurope": "we",
      "westindia": "wi",
      "westus": "wu",
      "westus2": "wu2",
      "westus3": "wu3"
    },
    "subscriptionId": "[subscription().subscriptionId]",
    "LocationShortName": "[variables('LocationShortNames')[parameters('location')]]",
    "NamingStandard": "[format('{0}', variables('LocationShortName'))]",
    "automationAccountNameVar": "[if(not(empty(parameters('exisitingAutomationAccount'))), createArray(parameters('exisitingAutomationAccount')), createArray(replace(format('aa-{0}', variables('NamingStandard')), 'aa', uniqueString(variables('NamingStandard')))))]",
    "automationAccountNameValue": "[first(variables('automationAccountNameVar'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('aa-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('automationAccountRg')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "automationAccountName": {
            "value": "[variables('automationAccountNameValue')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "pwsh7RunbookNames": {
            "value": "[variables('runbooksPwsh7')]"
          },
          "newAutomationAccount": {
            "value": "[parameters('newAutomationAccount')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "580568774908231394"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "automationAccountName": {
              "type": "string"
            },
            "pwsh7RunbookNames": {
              "type": "array"
            },
            "newAutomationAccount": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "condition": "[parameters('newAutomationAccount')]",
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('automationAccountName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Basic"
                },
                "encryption": {
                  "keySource": "Microsoft.Automation",
                  "identity": {}
                }
              }
            },
            {
              "copy": {
                "name": "pwsh7runbookDeployment",
                "count": "[length(parameters('pwsh7RunbookNames'))]"
              },
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', if(parameters('newAutomationAccount'), parameters('automationAccountName'), parameters('automationAccountName')), parameters('pwsh7RunbookNames')[copyIndex()].name)]",
              "location": "[parameters('location')]",
              "properties": {
                "runbookType": "PowerShell7",
                "logProgress": true,
                "logVerbose": true,
                "publishContentLink": {
                  "uri": "[parameters('pwsh7RunbookNames')[copyIndex()].uri]",
                  "version": "1.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "aaIdentityId": {
              "type": "string",
              "value": "[if(parameters('newAutomationAccount'), reference(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), '2021-06-22', 'full').identity.principalId, reference(resourceId('Microsoft.Automation/automationAccounts', if(parameters('newAutomationAccount'), parameters('automationAccountName'), parameters('automationAccountName'))), '2021-06-22', 'full').identity.principalId)]"
            },
            "aaLocation": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), '2021-06-22', 'full').location]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('automationAccountRg')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "connection_azureautomation_name": {
            "value": "[variables('automationAccountConnectionName')]"
          },
          "subscriptionId": {
            "value": "[variables('subscriptionId')]"
          },
          "displayName": {
            "value": "[variables('automationAccountConnectionName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "16750812602606904063"
            }
          },
          "parameters": {
            "connection_azureautomation_name": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[parameters('connection_azureautomation_name')]",
              "location": "[parameters('location')]",
              "kind": "V1",
              "properties": {
                "displayName": "[parameters('displayName')]",
                "parameterValueType": "Alternative",
                "customParameterValues": {},
                "api": {
                  "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureautomation', parameters('subscriptionId'), resourceGroup().location)]"
                },
                "testLinks": []
              }
            }
          ],
          "outputs": {
            "automationConnectId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/connections', parameters('connection_azureautomation_name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('aa-deployment-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('la-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('automationAccountRg')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "automationAccountConnectionName": {
            "value": "[variables('automationAccountConnectionName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subscriptionId": {
            "value": "[parameters('automationAccountSubscriptionId')]"
          },
          "automationAccountName": {
            "value": "[variables('automationAccountNameValue')]"
          },
          "automationAccountResourceGroup": {
            "value": "[parameters('automationAccountRg')]"
          },
          "automationAccountLocation": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('aa-deployment-{0}', parameters('deploymentNameSuffix')))).outputs.aaLocation.value]"
          },
          "automationAccountConnectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))).outputs.automationConnectId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "9939084088027324435"
            }
          },
          "parameters": {
            "workflows_deallocatevm_name": {
              "type": "string",
              "defaultValue": "deallocatevm"
            },
            "automationAccountConnectionName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "automationAccountName": {
              "type": "string"
            },
            "automationAccountResourceGroup": {
              "type": "string"
            },
            "automationAccountLocation": {
              "type": "string"
            },
            "automationAccountConnectId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[parameters('workflows_deallocatevm_name')]",
              "location": "[parameters('location')]",
              "tags": {
                "Department": "IT",
                "Environment": "Non-Production"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "defaultValue": {},
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {}
                      }
                    }
                  },
                  "actions": {
                    "For_each": {
                      "foreach": "@body('Parse_JSON')?['data']?['essentials']?['configurationItems']",
                      "actions": {
                        "Create_job": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "properties": {
                                "parameters": {
                                  "VMNames": "@items('For_each')",
                                  "environment": "AzureUSGovernment"
                                }
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName'))]",
                            "queries": {
                              "runbookName": "Start-VmDeallocation",
                              "wait": true,
                              "x-ms-api-version": "2015-10-31"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Parse_JSON": {
                      "runAfter": {},
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()",
                        "schema": {
                          "properties": {
                            "data": {
                              "properties": {
                                "alertContext": {
                                  "properties": {
                                    "Activity Log Event Description": {
                                      "type": "string"
                                    },
                                    "authorization": {
                                      "properties": {
                                        "action": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "caller": {
                                      "type": "string"
                                    },
                                    "channels": {
                                      "type": "string"
                                    },
                                    "claims": {
                                      "type": "string"
                                    },
                                    "correlationId": {
                                      "type": "string"
                                    },
                                    "eventDataId": {
                                      "type": "string"
                                    },
                                    "eventSource": {
                                      "type": "string"
                                    },
                                    "eventTimestamp": {
                                      "type": "string"
                                    },
                                    "level": {
                                      "type": "string"
                                    },
                                    "operationId": {
                                      "type": "string"
                                    },
                                    "operationName": {
                                      "type": "string"
                                    },
                                    "properties": {
                                      "properties": {
                                        "entity": {
                                          "type": "string"
                                        },
                                        "eventCategory": {
                                          "type": "string"
                                        },
                                        "hierarchy": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "subStatus": {
                                      "type": "string"
                                    },
                                    "submissionTimestamp": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "essentials": {
                                  "properties": {
                                    "alertContextVersion": {
                                      "type": "string"
                                    },
                                    "alertId": {
                                      "type": "string"
                                    },
                                    "alertRule": {
                                      "type": "string"
                                    },
                                    "alertTargetIDs": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "configurationItems": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "essentialsVersion": {
                                      "type": "string"
                                    },
                                    "firedDateTime": {
                                      "type": "string"
                                    },
                                    "monitorCondition": {
                                      "type": "string"
                                    },
                                    "monitoringService": {
                                      "type": "string"
                                    },
                                    "originAlertId": {
                                      "type": "string"
                                    },
                                    "severity": {
                                      "type": "string"
                                    },
                                    "signalType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "schemaId": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "outputs": {}
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureautomation": {
                        "connectionId": "[parameters('automationAccountConnectId')]",
                        "connectionName": "[parameters('automationAccountConnectionName')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        },
                        "id": "[concat(format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureautomation', parameters('subscriptionId'), parameters('automationAccountLocation')))]"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "logicAppGetUrl": {
              "type": "string",
              "value": "[listCallbackURL(format('{0}/triggers/manual', resourceId('Microsoft.Logic/workflows', parameters('workflows_deallocatevm_name'))), '2017-07-01').value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('aa-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('wh-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('automationAccountRg')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "subscriptionId": {
            "value": "[subscription().id]"
          },
          "serviceUri": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('la-deployment-{0}', parameters('deploymentNameSuffix')))).outputs.logicAppGetUrl.value]"
          },
          "actionGroupName": {
            "value": "[parameters('actionGroupName')]"
          },
          "webhookReceiverName": {
            "value": "URI"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "10372704483698081436"
            }
          },
          "parameters": {
            "activityLogAlerts_vmpoweredoff_name": {
              "type": "string",
              "defaultValue": "vmpoweredoff"
            },
            "subscriptionId": {
              "type": "string"
            },
            "actionGroupName": {
              "type": "string"
            },
            "webhookReceiverName": {
              "type": "string"
            },
            "serviceUri": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "microsoft.insights/actionGroups",
              "apiVersion": "2019-06-01",
              "name": "[parameters('actionGroupName')]",
              "location": "global",
              "properties": {
                "groupShortName": "webhook",
                "enabled": true,
                "webhookReceivers": [
                  {
                    "name": "[parameters('webhookReceiverName')]",
                    "serviceUri": "[parameters('serviceUri')]",
                    "useCommonAlertSchema": true
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/activityLogAlerts",
              "apiVersion": "2020-10-01",
              "name": "[parameters('activityLogAlerts_vmpoweredoff_name')]",
              "location": "Global",
              "tags": {
                "Environment": "Production"
              },
              "properties": {
                "scopes": [
                  "[format('/subscriptions/{0}', parameters('subscriptionId'))]"
                ],
                "condition": {
                  "allOf": [
                    {
                      "field": "category",
                      "equals": "Administrative"
                    },
                    {
                      "field": "resourceType",
                      "equals": "microsoft.compute/virtualmachines"
                    },
                    {
                      "field": "operationName",
                      "equals": "Microsoft.Compute/virtualMachines/powerOff/action"
                    }
                  ]
                },
                "actions": {
                  "actionGroups": [
                    {
                      "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]",
                      "webhookProperties": {}
                    }
                  ]
                },
                "enabled": true
              },
              "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountRg')), 'Microsoft.Resources/deployments', format('la-deployment-{0}', parameters('deploymentNameSuffix')))]"
      ]
    }
  ]
}